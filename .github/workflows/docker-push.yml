name: Push Docker Image to AWS ECR

on:
  push:
    branches:
      - main  # Trigger when pushing to main

jobs:
  push_to_ecr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get AWS Account ID
        run: echo "AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_ENV

      # - name: Set ECR URI
      #   run: echo "ECR_URI=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}" >> $GITHUB_ENV

      # - name: Build and tag Docker image
      #   run: |
      #     export IMAGE_TAG=$(date +%Y%m%d%H%M%S)  # Generate timestamp-based tag
      #     export ECR_URI=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}
      #     docker build -t $ECR_URI:$IMAGE_TAG .
      #     echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      # - name: Push image to AWS ECR
      #   run: docker push ${{ env.ECR_URI }}:${{ env.IMAGE_TAG }}

      # - name: Output Image URI
      #   run: echo "Pushed Docker image: ${{ env.ECR_URI }}:${{ env.IMAGE_TAG }}"
